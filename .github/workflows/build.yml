name: Build and Package VSCode Extension

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
        contents: write
    outputs:
        version: ${{ steps.pkgver.outputs.VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure we fetch all history so we can find the branch name


      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Bump version
        run: npm run bump-version

      - name: Compile TypeScript
        run: npm run compile

      - name: Install vsce
        run: npm install -g vsce

      - name: Package VS Code extension
        run: |
          mkdir -p vsix
          vsce package --out ./vsix
        # Uncomment below line and set it in GitHub Secrets if you plan to publish to VS Marketplace
        # env:
        #   VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Get package version
        id: pkgver
        run: echo "VERSION=$(cat package.json | jq -r .version)" >> $GITHUB_OUTPUT

      - name: Install jq
        run: sudo apt-get install jq

      - name: Commit and push version bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          # Commit local changes
          git add package.json package-lock.json
          git commit -m "ci: bump version to ${{ steps.pkgver.outputs.VERSION }}"

          # Checkout the branch and push changes
          git checkout ${{ github.head_ref }}
          git push origin HEAD:${{ github.head_ref }}

      - name: List VSIX files
        run: ls -alh vsix

      - name: Archive VSIX for release
        uses: actions/upload-artifact@v2
        with:
          name: vsix-archive
          path: vsix/*.vsix

  release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download VSIX Artifact
        uses: actions/download-artifact@v2
        with:
          name: vsix-archive
          path: ./vsix

      - name: List downloaded files
        run: ls -alh ./vsix

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.version }}
          release_name: Release ${{ needs.build.outputs.version }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload VSIX to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vsix/jsjdconverter-${{ needs.build.outputs.version }}.vsix
          asset_name: jsjdconverter-${{ needs.build.outputs.version }}.vsix
          asset_content_type: application/octet-stream
