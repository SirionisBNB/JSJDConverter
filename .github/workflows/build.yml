name: Build and Package VSCode Extension

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.bump_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Bump version
        id: bump_version
        run: |
          major_version=$(jq -r ".version" package.json | cut -d. -f1)
          minor_version=$(jq -r ".version" package.json | cut -d. -f2)
          patch_version=$(jq -r ".version" package.json | cut -d. -f3)

          if [ "${{ github.event_name }}" == "push" ]; then
            # Increment the minor version for main branch builds
            minor_version=$((minor_version + 1))
            patch_version=0
          else
            # Increment the patch version for pull requests
            patch_version=$((patch_version + 1))
          fi

          new_version="${major_version}.${minor_version}.${patch_version}"
          echo "new_version=$new_version"

          # Update package.json with the new version
          jq ".version=\"$new_version\"" package.json > tmp.json && mv tmp.json package.json
          cat package.json

          # Output the new version
          echo "version=${new_version}" >> $GITHUB_ENV
          echo "version=${new_version}" >> $GITHUB_OUTPUT
          echo "::set-output name=version::$new_version"

      - name: Compile TypeScript
        run: npm run compile

      - name: Install vsce
        run: npm install -g vsce

      - name: Package VS Code extension
        run: |
          mkdir -p vsix
          vsce package --out ./vsix

      - name: Install jq
        run: sudo apt-get install jq

      - name: Commit and push version bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "ci: bump version to ${{ steps.bump_version.outputs.version }}"

          # Checkout the branch and push changes only if it exists
          BRANCH_NAME=${{ github.head_ref }}
          if [[ $(git ls-remote --heads origin $BRANCH_NAME | wc -l) -gt 0 ]]; then
            git checkout $BRANCH_NAME
            git push origin $BRANCH_NAME
          else
            echo "Branch $BRANCH_NAME does not exist. Skipping push."
          fi

      - name: List VSIX files
        run: ls -alh vsix

      - name: Archive VSIX for release
        uses: actions/upload-artifact@v2
        with:
          name: vsix-archive
          path: vsix/*.vsix

      - name: Create Tag
        if: github.ref == 'refs/heads/main'
        run: |
          git tag v${{ steps.bump_version.outputs.version }}
          git push origin v${{ steps.bump_version.outputs.version }}
